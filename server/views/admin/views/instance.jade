extends ../admin-wrapper

block content
	section(data-jsclass="adminEditController" data-mode= mode data-id= instance.id data-model= model data-endpoint= endpoint data-search-property= schema.admin.listProperties[0])
		.container-fluid
			.row
				.col-xs-12
					.panel.panel-default
						.panel-heading
							.pull-right
								if mode === 'view'
									i.edit-button.fa.fa-pencil-square-o.fa-2x(data-id= instance.id)
								else
									if mode !== 'add'
										i.instance-select.fa.fa-eye.fa-2x(data-id= instance.id)
								if mode !== 'add'
									i.delete-button.fa.fa-times-circle.fa-2x.text-danger(data-id= instance.id)
							i.list-button.fa.fa-list.fa-2x
							!= ' Editing <strong>' + model + '</strong> row <strong>' + instance.id + '</strong>'
						.panel-body
							form.form.form-horizontal(method="POST" action= endpoint)
								for parent in parents
									.form-group
										label.col-sm-3.control-label
											= parent.name
										.col-sm-9
											.input-margins
												a(href= parent.url)= parent.description
								
								- var properties = mode === 'view' ? schema.admin.viewProperties : schema.admin.editProperties

								for property in properties
									.form-group
										label.col-sm-3.control-label
											= property
										.col-sm-9
											- var dataType = schema.properties[property].type;
											- var type = schema.properties[property].admin.inputType
											- var options = schema.properties[property].admin.options
											- var multiple = schema.properties[property].admin.multiple
											- var readonly = schema.properties[property].admin.readonly
											- var val = instance[property]
											- var encode = ''
											
											if val && dataType === 'Date'
												if mode === 'edit'
													- val = moment.utc(instance[property]).format('YYYY-MM-DD')
												else
													- val = moment.utc(instance[property]).format('MM/DD/YYYY')

											if query[property]
												- val = query[property]
												
											if (type === 'textarea' && (dataType === 'Object' || dataType === 'Array' ))
												- encode = 'json'

												if val
													- val = JSON.stringify(val,null,2)
												
											if mode === 'view'
												.input-margins
													if dataType === 'Object' && val
														pre= val
													else
														= val
											else
												if options
													for option in options
														- var checked = false
														if multiple
															- checked= !val || val.indexOf(option) === -1 ? false : true
														else
															- checked= val === option
														
														div(class= multiple ? "checkbox" : "radio")
															label
																input(type= multiple ? "checkbox" : "radio" data-datatype= dataType name= property value= option checked= checked)
																= ' ' + option
												else if type === 'textarea'
													textarea.form-control(name= property data-datatype= dataType data-encode= encode)= val
												else if type === 'checkbox'
													.input-margins
														input(type= type data-datatype= dataType data-encode= encode name= property value= "true" checked= val)

												else
													if query[property] || property === 'id'
														input.form-control(type= type data-datatype= dataType data-encode= encode name= property value= val readonly)
													else
														input.form-control(type= type data-datatype= dataType data-encode= encode name= property value= val)

								if mode === 'view'
									for helper in schema.admin.helpers
										.form-group
											label.col-sm-3.control-label
												= helper.name
											.col-sm-9
												if helper.type === 'upload'
													- var endpoint = helper.endpoint
													- var property = helper.property
													- var photo = getUploadForProperty(property,instance.uploads(),null,true)
													- endpoint = endpoint.replace(':id', instance.id)
													.upload-viewport.text-center(data-jsclass="digitopiaViewport" data-crop="false" data-blowup="false")
														img(data-jsclass="digitopiaLazyImg" data-lazy-src= photo.url)
														.dropzone(data-jsclass="dropzoneController" data-endpoint= endpoint)
															.dz-message.
																Drop your photo here<br><small>(or click to upload)</small>
										
									for relationship in children
										.form-group
											label.col-sm-3.control-label
												= relationship.relation.name
												if relationship.createUrl
													| &nbsp;
													a.fa.fa-plus.fa-2(href= relationship.createUrl)
														
											.col-sm-9
												.input-margins
													for child in relationship.children
														.related-instance
															a(href= child.url)= child.description
												
													
								if mode !== 'view'
									.form-group
										.col-sm-3
										.col-sm-9
											.btn.btn-primary.save-button(data-id= instance.id) Save
